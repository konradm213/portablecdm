Note: to find earlier reflections, look at file history


what do I want to learn or understand better?
Now: I’ve learned a lot about project management, application of scrum and working with software during this project. A lot of the experience came through careful preparation and literature review, as well as through trial and error. I’ve learned how to use scrum for effectively reaching goals within a team project. In order to make things work well, we’ve had to develop a lot of trust within our group. I was a contributing factor in this since I suggested we do things outside of the project to get to know each other better. Our expectations of each other differed according to our prior programming skills, and our general ambitions for the course, but we learned how to compromise within the group. As for the technical parts of the course, I learned how to use github, how to familiarize myself with an existing code base and how to work with expo, react and android studio.
What to do better in future projects:  Looking back, a lot of my weekly goals have been around the specification of user stories, and other scrum related tasks. I think that I have a good enough grasp of this now, but I would still like to apply my new skills in a commercial software project. I believe that building something from scratch, and working on it for a long time will be different from this project. Not least because real world projects (outside of course work) has more dimensions to take into account, for example costs. Therefore my final goal is to use scrum in a commercial application project.
How to bridge the gap: Use my new found skills to work with scrum in a commercial project. Find a position in a software company and apply my skills.

how can I help someone else, or the entire team, to learn something new?
Now: Throughout the project, I have helped my teammates with understanding the code base, writing their own code and specifying user stories, tasks and estimations. In the beginning of the project we were all on different levels of understanding with regards to both scrum and programming. As the project moved on, our differing levels of understanding equalised. As of now, we have a somewhat similar level of understanding. Teaching other people in the group what I know not only helped them, but also helped my own understanding. In conclusion, the learning processed moved along well in our project, but it took to long to reach a reasonable level of understanding among some group members.
What to do better in future projects: In future projects, I suggest that during the first sprint week, sprint team should establish areas in which everyone reads up on. During the following week we will test each others knowledge in a discussion or workshop. This way everyone is certified to have a base level of knowledge. This is important to build trust within the group. If someone is lagging behind the rest of the group in terms of understanding, then the group must take action to rectify this ASAP. It is possible that this way of working is not needed since someones lack of knowledge becomes apparent quite quickly if the group works together for an extended time.
How to bridge the gap: Establish the above mentioned way of testing each others knowledge early on in the project. If it’s superfluous, at least establish means of teaching each other effectively, for example some members took it upon himself to summarize one of the course books during our project.

what is my contribution towards the team’s application of scrum?
Now: During the project I have helped specify user stories, tasks and estimates. My main effort has been placed on actually completing tasks, and thereby, user stories. I also made sure to keep a critical eye on our user stories’ scope and specifications. I regularly raised the issue of unclear specifications and made sure they were more accurately specified. The issue of estimates was also raised often, since our estimates were often inaccurate throughout most of the project. In the beginning, I mistakenly thought that applying scrum was up to the scrum master, and only the scrum master. I quickly realized that this was not true. Another issue was the fact that we specified user stories before we were well acquainted with the code and the app. This led to inaccurate specifications that in turn led to extra work.
What to do better in future projects: For my future projects, I want to make sure that the person who specifies the user stories is knowledgeable with the code base and the project as a whole. Otherwise the scope, formulation and estimates of the user story will be inaccurate.
How to bridge the gap: Make sure that someone who is knowledgeable with the code and the project specifies the user stories. If this is not possible, then make sure to at least OK the user stories with that person before real work begins.

what is my contribution towards the team’s deliveries? That means that for the personal learning objective you will each week write down what you have achieved in relation to last week's ambition (technologies, concepts and skills learnt as well as how this was achieved), what you would like to achieve for the next week and how to make the change happen. The first week of the course you describe the current situation by motivating a learning objective. It is perfectly fine to change objective/s each week as long as you can motivate the change and you evaluate the outcome of the previous week (e.g. describing the current situation).
Now: My last goal was to find a systematic way of estimating user stories. I’ve yet to find such a system. I have decided to give up on this learning goal, since the course period is over, but also because I doubt that such a system would be superior to a knowledgeable persons gut feeling.
My contributions during this project have been threefold. Firstly I have helped my team apply scrum in an effective way, as explained above. Secondly, I’ve contributed to a productive atmosphere within the group. This is harder to quantify, but I believe that by being on time, delivering above what is expected and always having a positive outlook, I’ve helped the group move through the project. Finally, I have contributed a variety of technical solutions to our project. My main achievement was adding the detailed berth view. As I was the first one in the group to successfully add a functioning new view, my experiences helped the team in configuring other new views.
What to do better in future projects: As for the next project, I want to establish a better framwork for checking that work gets done. Since this was a school project, there was no way to force someone to do their work, their was simply no leverage there. Obviously someone shouldn’t do work only because they are forced to, but it’s still important in order for people to take their work seriously. I believe that this group dynamic will be different in a commercial project since then peoples livelyhood are at stake. So much of the scrum framework builds on trust and equal ambition for getting the work done. This difference in ambition amongst the team members led to some members delivering more, and some members delivering significantly less.
How to bridge the gap: Keep the same principles in place, but make sure that everyone is on the same level of motivation and ambition, otherwise the scrum principles don’t really work properly.

